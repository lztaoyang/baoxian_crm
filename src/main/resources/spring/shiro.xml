<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd  
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">
	<!-- 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->
	<bean id="realm" class="com.lazhu.core.shiro.Realm" />
	
    <bean id="shiroCacheManager" class="org.crazycake.shiro.RedisCacheManager">
    	<property name="redisManager" ref="shiroRedisManager" />
    </bean>
    
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="cacheManager" ref="shiroCacheManager" />
		<property name="realm" ref="realm" />
	</bean>
	<!--  -->
	<bean id="shiroRedisManager" class="org.crazycake.shiro.RedisManager">
		<property name="host" value="${redis.host}" />
		<property name="port" value="${redis.port}" />
		<!-- <property name="password" value="${redis.password}" /> -->
		<property name="expire" value="3600" />
	</bean>
	<bean id="formAuthenticationFilter" class="com.lazhu.core.shiro.LaZhuAuthenticationFilter">
		<!-- 管理员登录地址 -->
		<property name="adminLoginUrl" value="/sys/unauthorized" />
		<!-- 会员登录地址 -->
		<property name="customerLoginUrl" value="/demo/member/unauthorized" />
	</bean>
	<!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截,Shiro对基于Spring的Web应用提供了完美的支持 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口,这个属性是必须的 --><!-- 安全管理器 -->
		<property name="securityManager" ref="securityManager" />
		<!-- 要求登录时的链接 --><!-- 默认的登陆访问url -->
		<property name="loginUrl" value="/sys/login" />
		<!-- <property name="loginUrl" value="/sys/unauthorized" /> -->
		<!-- 用户访问未对其授权的资源时,所显示的连接 --><!-- 没有权限跳转的url -->
		<property name="unauthorizedUrl" value="/sys/forbidden" />
		<!-- Shiro连接约束配置,即过滤链的定义 -->
		<!-- anon：它对应的过滤器里面是空的,什么都没做 -->
		<!-- authc：该过滤器下的页面必须验证后才能访问,它是Shiro内置的一个拦截器org.apache.shiro.web.filter.authc.FormAuthenticationFilter -->
		<property name="filters">  
            <map>  
                <!-- 将自定义 的FormAuthenticationFilter注入shiroFilter中 -->  
                <entry key="authc" value-ref="formAuthenticationFilter" />  
            </map>  
        </property>
        <!-- <property name="filters">
        	<map>
            	<entry key="kickout" value-ref="kickoutSessionControlFilter"/>
        	</map>
      	</property> -->
        <!-- 访问地址的过滤规则,从上至下的优先级,如果有匹配的规则,就会返回,不会再进行匹配 -->	
		<property name="filterChainDefinitions">
			<value>
				/**/*.js=anon
				/**/*.css=anon
				/**/fonts/*=anon
				/**/*.css=anon
				/**/*.js=anon
				/**/*.png=anon
				/**/*.gif=anon
				/**/*.jpg=anon
				/**/*.jpeg=anon
				/**/*.html=anon
				/**/img/*=anon
				/sys/dic/read/all=anon
				/sys/dept/read/list=anon
				/sys/index.html=anon
				/sys/regin=anon
				/sys/login=anon
				/sys/unauthorized=anon
				/sys/forbidden=anon
				/sys/sns*=anon
				/sys/callback*=anon
				/sys/**=authc,user
				/demo/member/read/list2=authc,user
				/**=anon
			</value>
		</property>
	</bean>
	<!-- Shiro生命周期处理器 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>