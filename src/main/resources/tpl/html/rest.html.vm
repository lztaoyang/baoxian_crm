<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <title>${table.comment}管理</title>
    <!-- 引入样式 -->
    <link rel="stylesheet" href="css/eui.1.3.0.css">
    <link rel="stylesheet" href="css/bootstrap.3.3.7.css">
    <!--<link rel="stylesheet" href="css/docs.css">-->
    <!--<script src="js/jquery.min.1.12.4.js"></script>-->
    <script src="js/vue.2.3.2.js"></script>
    <script src="js/vuex.2.3.1.js"></script>
    <script src="js/vue-resource.1.3.1.js"></script>
    <script src="js/eui.1.3.0.js"></script>
    <script src="js/common.js"></script>
</head>
<body>
<div id="app">
    <el-row style="margin:10px 10px 10px 10px;">
        <el-col :span="8">
            <strong>${table.comment}管理</strong>
        </el-col>
        <el-col :span="16">
            <el-breadcrumb separator="/" style="float:right">
                <el-breadcrumb-item>首页</el-breadcrumb-item>
                <el-breadcrumb-item>${table.comment}管理</el-breadcrumb-item>
            </el-breadcrumb>
        </el-col>
    </el-row>

    <el-collapse accordion>
        <el-collapse-item title="查询面板[点击展开]">
            <el-form :inline="true" :model="searchParams" label-position="right" style="margin-bottom: 0px">
#foreach($field in ${table.fields})
#if ($field.keyFlag || $field.defaultFlag || (!$field.propertyType.equals("String") && !$field.propertyType.equals("Date")))
#else
                <el-form-item label="${field.comment}" style="font-size: 13px;">
                    <el-input size="small" v-model="searchParams.${field.propertyName}" placeholder="${field.comment}"></el-input>
                </el-form-item>
#end
#end
                <el-form-item>
                    <el-button size="small" type="info" @click="readList">查询</el-button>
                </el-form-item>
            </el-form>
        </el-collapse-item>
    </el-collapse>

    <el-row style="margin:10px 10px 0px 10px;">
        <el-table id="12324"
                  :data="pageData.data"
                  ref="entityTable"
                  stripe
                  max-height="450px"
                  row-key="id"
                  empty-text="-"
                  append="加载中..."
                  :row-style="{'font-size':'13px'}"
                  style="width: 100%"
                  @selection-change="selectionChange"
        >
            <el-table-column
                    type="selection"
                    prop="id"
            >
            </el-table-column>
            <el-table-column type="expand" label="详情">
                <template scope="props">
                    <el-form label-position="left" inline >
#foreach($field in ${table.fields})
#if ($field.keyFlag || $field.defaultFlag || (!$field.propertyType.equals("String") && !$field.propertyType.equals("Date")))
#else
                        <el-form-item label="${field.comment}">
                            <span>{{ props.row.${field.propertyName} }}</span>
                        </el-form-item>
#end
#end
                        <el-form-item>
                            <el-button size="small" type="info" @click="readDetail(props.row.id)">显示更多</el-button>
                        </el-form-item>
                    </el-form>
                </template>
            </el-table-column>
#foreach($field in ${table.fields})
#if ($field.keyFlag || $field.defaultFlag || (!$field.propertyType.equals("String") && !$field.propertyType.equals("Date")))
#else
            <el-table-column
                    prop="${field.propertyName}"
                    min-width="100"
                    v-bind:show-overflow-tooltip="true"
                    label="${field.comment}">
            </el-table-column>
#end
#end
            <el-table-column
                    fixed="right"
                    label="操作"
                    width="130">
                <template scope="scope">
                    <el-button-group size="small">
                        <el-button size="small" type="warning" @click="showEditDialog(scope.row.id)">编辑</el-button>
                        <el-button size="small" type="danger" @click="del(scope.row.id)">删除</el-button>
                        <!--<el-button size="small" type="primary" @click="readDetail(scope.row.id)">查看</el-button>-->
                    </el-button-group>
                </template>
            </el-table-column>
        </el-table>
    </el-row>
    <el-row style="margin:10px 10px 0px 10px;">
        <el-col :span="8">
            <el-button size="small" type="info" @click="showAddDialog">新增</el-button>
            <el-button size="small" type="danger" @click="delBatch">批量删除</el-button>
        </el-col>
        <el-col :span="16" class="text-right">
            <el-pagination ref="entityTablePage"
                           :current-page="pageData.current"
                           :page-sizes="[10, 50, 100]"
                           :page-size="pageData.size"
                           layout="total, sizes, prev, pager, next, jumper"
                           :total="pageData.iTotalRecords"
                           @size-change="readList"
                           @current-change="readList"
            >
            </el-pagination>
        </el-col>

    </el-row>
    <hr style="margin:0px ;"/>
    <!-- 弹出编辑窗口 -->
    <el-dialog :title="entity.id?'编辑':'新增'" :visible.sync="editFormVisible" size="large">
        <el-form ref="editForm" :model="entity" :rules="rules" inline>
#foreach($field in ${table.fields})
#if ($field.keyFlag || $field.defaultFlag || (!$field.propertyType.equals("String") && !$field.propertyType.equals("Date")))
#else
            <el-form-item label="${field.comment}" label-width="100px" prop="${field.propertyName}">
                <el-input size="small" v-model="entity.${field.propertyName}" placeholder="${field.comment}" ></el-input>
            </el-form-item>
#end
#end
        </el-form>
        <div slot="footer" class="dialog-footer">
            <el-button size="small" @click="editFormVisible = false">取 消</el-button>
            <el-button size="small" type="info"  @click="save">保 存</el-button>
        </div>
    </el-dialog>
    <!-- 弹出详情窗口 -->
    <el-dialog title="投保人" :visible.sync="detailFormVisible" size="large">
        <el-form ref="detailForm" :model="entity" inline>
            <el-form label-position="left" inline >
#foreach($field in ${table.fields})
#if ($field.keyFlag || $field.defaultFlag || (!$field.propertyType.equals("String") && !$field.propertyType.equals("Date")))
#else
                <el-form-item label="${field.comment}">
                    <span>{{ entity.${field.propertyName} }}</span>
                </el-form-item>
#end
#end
            </el-form>
        </el-form>
        <div slot="footer" class="dialog-footer">
            <el-button @click="detailFormVisible = false">关闭</el-button>
        </div>
    </el-dialog>
</div>
</body>

<script>

    var vuePage = new Vue({
        el: '#app',
        data: {
            //是否显示编辑窗口
            editFormVisible: false,
            //是否显示详情窗口
            detailFormVisible: false,
            //查询参数
            searchParams: {},
            //分页数据,其中包含分页信息与数据列表
            pageData: {},
            //当前操作的实体（编辑/新增）
            entity: {},
            //表格中选中的行的集合
            selectDatas: [],
            //表单校验规则 api:https://github.com/yiminghe/async-validator
            rules: {
#foreach($field in ${table.fields})
#if ($field.keyFlag || $field.defaultFlag || (!$field.propertyType.equals("String") && !$field.propertyType.equals("Date")))
#else
                ${field.propertyName}: [
                    { required: true, message: '请输入${field.comment}', trigger: 'blur' },
                    { max: 10, message: '长度在10个字符以内', trigger: 'blur' }
                ],
#end
#end

            }
        },
        created: function () {
            var self = this;
            self.readList();
        },
        methods: {
            //查询
            readList: function () {
                var params = {
                    asc: false,
                    orderBy: "id",
                    pageNum: (this.@!@refs.entityTablePage ? this.@!@refs.entityTablePage.internalCurrentPage : 1),
                    pageSize: (this.@!@refs.entityTablePage ? this.@!@refs.entityTablePage.internalPageSize : 10)
                };
                //将查询条件合并到请求参数中
                for (var item in this.searchParams) {
                    if (this.searchParams[item] != "") {
                        params[item] = this.searchParams[item];
                    }
                }
                this.@!@http.put('/policy/policy/read/list', params)
                        .then(function (response) {
                            this.pageData = response.data;
                        });
            },
            //详情
            readDetail: function (entityId) {
                this.@!@http.put('/policy/policy/read/detail', {id: entityId})
                        .then(function (response) {
                            this.entity = response.data.data;
                            this.detailFormVisible = true;
                        });
            },
            //弹出新增窗口
            showAddDialog: function () {
                this.editFormVisible = true;
                for (var item in this.entity) {
                    this.entity[item] = "";
                }
            },
            //弹出编辑窗口
            showEditDialog: function (entityId) {
                this.@!@http.put('/policy/policy/read/detail', {id: entityId})
                        .then(function (response) {
                            this.entity = response.data.data;
                            this.editFormVisible = true;
                        });
            },
            //保存
            save: function () {
                var self = this;
                self.@!@refs["editForm"].validate(function(valid){
                    if (valid) {//校验通过
                        self.@!@http.post('/policy/policy', self.entity)
                                .then(function (response) {
                                    var result = response.data.data;
                                    self.editFormVisible = false;
                                    if (self.entity.id) {//修改
                                        for (var i = 0; i < self.pageData.data.length; i++) {
                                            if (self.pageData.data[i].id === result.id) {
                                                Vue.set(self.pageData.data, i, result);
                                                break;
                                            }
                                        }
                                    } else {
                                        self.pageData.data.unshift(result);
                                    }
                                });
                    } else {
                        self.@!@message({
                            message: '请按要求输入内容',
                            type: 'warning'
                        });
                        return false;
                    }
                });

            },
            //删除
            del: function (entityIds) {
                var params = {};
                if (entityIds) {
                    //删除单个实体
                    if (entityIds instanceof Array) {
                        params.ids = entityIds;
                    } else {//批量删除
                        params.ids = [entityIds];
                    }
                }
                var self = this;
                self.@!@confirm('您确定要删除'+params.ids.length+'条记录吗?, 删除将无法恢复!', '提示', {
                    confirmButtonText: '确定',
                    cancelButtonText: '取消',
                    type: 'warning'
                }).then(function () {
                    self.@!@http.delete('/policy/policy', {body: params})
                            .then(function (response) {
                                var tempIndexArray = [];
                                //同步更新界面中的表格
                                for(var j in params.ids){
                                    for(var i in self.pageData.data){
                                        if (self.pageData.data[i].id == params.ids[j]){
                                            self.pageData.data.splice(i,1);
                                            break;
                                        }
                                    }
                                }
                                console.log(response);
                                //self.entity = response.data.data;
                            });
                }).catch(function(){});
            },
            //批量删险
            delBatch: function () {
                var self = this;
                if (self.selectDatas.length == 0) {
                    this.@!@alert('请选择要删除的记录', '提示', {
                        confirmButtonText: '确定',
                        callback: function(action) {
                            //if ("confirm"==action){
                        }
                    });
                }else{
                    var ids = new Array();
                    for(var i in self.selectDatas){
                        ids.push(self.selectDatas[i].id);
                    }
                    self.del(ids);
                }

            },
            //表格记录选择事件
            selectionChange: function (selection) {
                var self = this;
                self.selectDatas = selection;
                console.log(selection)
            },
            test:function(row, column){
                console.log('formatter');

                return 'abc';
            }

        }
    });
</script>
</html>